{"version":3,"sources":["components/Buttton.js","components/MenuItems.js","components/Dropdown.js","components/Navbar.js","components/pages/Home.js","components/pages/Services.js","components/pages/Products.js","components/pages/ContactUs.js","components/pages/SignUp.js","components/pages/Marketing.js","components/pages/Consulting.js","App.js","serviceWorker.js","index.js"],"names":["Button","to","className","MenuItems","title","path","cName","Dropdown","useState","click","setClick","onClick","map","item","index","key","Navbar","dropdown","setDropdown","closeMobileMenu","onMouseEnter","window","innerWidth","onMouseLeave","Home","Services","Products","ContactUs","SingUp","Marketing","Consulting","App","exact","component","SignUp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff8abe04.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nexport function Button () {\n    return(\n        <Link to='sign-up'>\n            <button className ='btn'>\n                Sign up\n            </button>\n        </Link>\n    )\n}\n","export const MenuItems = [\n    {\n        title: 'Marketing',\n        path: '/marketing',\n        cName: 'dropdown-link'\n    },\n    {\n        title: 'Consulting',\n        path: '/consulting',\n        cName: 'dropdown-link'\n    }, {\n        title: 'Desing',\n        path: '/design',\n        cName: 'dropdown-link'\n    },\n    {\n        title: 'Development',\n        path: '/development',\n        cName: 'dropdown-link'\n    },\n]","import React, { useState } from \"react\";\nimport { MenuItems } from \"./MenuItems\";\nimport { Link } from \"react-router-dom\";\nimport \"./Dropdown.css\";\n\nconst Dropdown = () => {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n  return (\n    <>\n      <ul\n        onClick={handleClick}\n        className={click ? \"dropdown-menu clicked\" : \"dropdown-menu\"}\n      >\n        {MenuItems.map((item, index) => {\n          return (\n            <li key={index}>\n              <Link\n                className={item.cName}\n                to={item.path}\n                onClick={() => setClick(false)}\n              >\n                {item.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Dropdown;\n","import React, { useState } from \"react\";\nimport { Button } from \"./Buttton\";\nimport { Link } from \"react-router-dom\";\nimport Dropdown from \"./Dropdown\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  const [click, setClick] = useState(false);\n  const [dropdown, setDropdown] = useState(false);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  const onMouseEnter = () => {\n    if (window.innerWidth < 960) {\n      setDropdown(false);\n    } else {\n      setDropdown(true);\n    }\n  };\n  const onMouseLeave = () => {\n    if (window.innerWidth < 960) {\n      setDropdown(false);\n    } else {\n      setDropdown(false);\n    }\n  };\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <Link to=\"/\" className=\"navbar-logo\">\n          EPIC \n          <i className='fab fa-firstdraft'></i>\n        </Link>\n        <div className=\"menu-icon\" onClick={handleClick}>\n          <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n        </div>\n        <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\"\n          onMouseEnter ={onMouseEnter}\n          onMouseLeave ={onMouseLeave}\n          >\n            <Link\n              to=\"/services\"\n              className=\"nav-links\"\n              onClick={closeMobileMenu}\n            >\n              Services <i className=\"fas fa-caret-down\"></i>\n            </Link>\n            {dropdown && <Dropdown />}\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/products\"\n              className=\"nav-links\"\n              onClick={closeMobileMenu}\n            >\n              Products\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/contact-us\"\n              className=\"nav-links\"\n              onClick={closeMobileMenu}\n            >\n              Contac Us\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/sign-up\"\n              className=\"nav-links-mobile\"\n              onClick={closeMobileMenu}\n            >\n              Sign Up\n            </Link>\n          </li>\n        </ul>\n        <Button />\n      </nav>\n    </>\n  );\n}\nexport default Navbar;\n","import React from \"react\";\nimport '../../App.css';\nexport default function Home () {\n  return (\n    <>\n      <h1 className=\"home\">EPIC</h1>\n    </>\n  );\n}","import React from \"react\";\n\nexport default function Services() {\n  return (\n    <>\n      <h1 className=\"services\">Services</h1>\n    </>\n  );\n}","import React from \"react\";\n\nexport default function Products () {\n  return (\n    <>\n      <h1 className=\"products\">PRODUCTS</h1>\n    </>\n  );\n}","import React from \"react\";\n\nexport default function ContactUs() {\n  return (\n    <>\n      <h1 className=\"contact-us\">CONTACT US</h1>\n    </>\n  );\n}","import React from \"react\";\n\nexport default function SingUp () {\n  return (\n    <>\n      <h1 className=\"sign-up\">SIGN UP</h1>\n    </>\n  );\n}","import React from \"react\";\n\nexport default function Marketing() {\n  return (\n    <>\n      <h1 className=\"marketing\">MARKETING</h1>\n    </>\n  );\n}","import React from \"react\";\n\nexport default function Consulting() {\n  return (\n    <>\n      <h1 className=\"consulting\">CONSULTING</h1>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from \"./components/pages/Home\";\nimport Services from \"./components/pages/Services\";\nimport Products from \"./components/pages/Products\";\nimport ContactUs from \"./components/pages/ContactUs\";\nimport SignUp from \"./components/pages/SignUp\";\nimport Marketing from \"./components/pages/Marketing\";\nimport Consulting from \"./components/pages/Consulting\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n      <Route path ='/' exact component={Home}/>\n      <Route path ='/services' exact component={Services}/>\n      <Route path ='/products' exact component={Products}/>\n      <Route path ='/contact-us' exact component={ContactUs}/>\n      <Route path ='/sign-up' exact component={SignUp}/>\n      <Route path ='/marketing' exact component={Marketing}/>\n      <Route path ='/consulting' exact component={Consulting}/>\n      </Switch>\n      </Router>\n      \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}